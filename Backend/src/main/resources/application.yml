spring:
    datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/testrc?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul  # DB Source URL
      username: root  # DB username
      password: root  # DB password
    jpa:
      hibernate:
        naming:
          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl  # Case Sensitivity
        ddl-auto: update  # DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
      show-sql: true  # JPA 쿼리문 확인 가능
      properties:
        hibernate:
          format_sql: true  # JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
    mvc:
      pathmatch:
        matching-strategy: ant_path_matcher  # swagger
    mail:
      host: smtp.gmail.com
      port: 587
      username: realcart403@gmail.com
      password: byjfkulhufqoexit
      smtp:
        auth: true
        timeout: 5000
        enable: true
    security:
      oauth2.client:
        registration:
          google:
            clientId: 55232188941-26bjfq117744pjvoeecihpe05t2pvd8c.apps.googleusercontent.com
            clientSecret: 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
            scope:
              - email
              - profile

# cors 설정
cors:
  allowed-origins: 'http://localhost:3000'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600

# 토큰 관련 secret Key 및 RedirectUri 설정
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpiry: 1800000
    refreshTokenExpiry: 604800000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth/redirect

jwt.secret: '8sknjlO3NPTBqo319DHLNqsQAfRJEdKsETOds'

# logging.config=classpath:logback-spring.xml
